function fn_out = cp_prepMeanMask(pth_dat,pth_deriv)
% Function to BIDSify
% - the "winner takes it all" mask images for GM and WM tissues
% - the mean MTsat images (full of with different masks applied)
% and create the corresponding description JSON files.
% then it should create a binary intra-cranial volume mask.
% 
% The latter is derived from one of the masked mean MTsat images and will
% be useful to ICV-mask the warped quantitative maps.
% 
% FORMAT
%   fn_out = cp_prepMeanMask(pth_dat,pth_deriv)
% 
% INPUT
%   pth_dat : path where to find the original data, see Readme
%   pth_out : path where to write the BIDSified data, see Readme
% 
% OUTPUT
%   fn_out  : list of files created
%_______________________________________________________________________
% Copyright (C) 2024 Cyclotron Research Centre

% Written by C. Phillips.
% Cyclotron Research Centre, University of Liege, Belgium

%% Deal with tissue mask images, in the top data folder, and name them
% ====================================================================
% - atlas-GM_space-MNI_mask.nii/.json
% - atlas-WM_space-MNI_mask.nii/.json
fn_GMmask_orig = fullfile(pth_dat,'WinnerTakesAllMask_GM.nii');
fn_GMmask = fullfile(pth_deriv,'atlas-GM_space-MNI_mask.nii');
copyfile(fn_GMmask_orig,fn_GMmask)

fn_WMmask_orig = fullfile(pth_dat,'WinnerTakesAllMask_WM.nii');
fn_WMmask = fullfile(pth_deriv,'atlas-WM_space-MNI_mask.nii');
copyfile(fn_WMmask_orig,fn_WMmask)

fn_GMmask_json = spm_file(fn_GMmask,'ext','json');
GMmask_json = struct( ...
    'Name', 'Grey matter mask', ...
    'Description', ['Voxel with higher probability, on average over the ' ...
        'subjects in the study, to be grey matter than white matter ' ...
        'or CSF and with a priori probability higher than .2 to be GM.'], ...
    'DerivedFrom', 'Segmented GM, WM and CSF maps from all subjects', ...
    'ReferencesAndLinks', 'https://doi.org/10.1016%2Fj.neurobiolaging.2014.02.008');
spm_save(fn_GMmask_json, GMmask_json, 'indent', '\t')

fn_WMmask_json = spm_file(fn_WMmask,'ext','json');
WMmask_json = struct( ...
    'Name', 'White matter mask', ...
    'Description', ['Voxel with higher probability, on average over the ' ...
        'subjects in the study, to be white matter than frey matter ' ...
        'or CSF and with a priori probability higher than .2 to be GM.'], ...
    'DerivedFrom', 'Segmented GM, WM and CSF maps from all subjects', ...
    'ReferencesAndLinks', 'https://doi.org/10.1016%2Fj.neurobiolaging.2014.02.008');
spm_save(fn_WMmask_json, WMmask_json, 'indent', '\t')

%% Deal with averaged map image(s) 
% =================================
% only some mean MTsat maps available but with 3 different masks/resolution
fn_meanMTsat_orig1 = fullfile(pth_dat,'Average_MTsat_Maps', ...
    'AveragedMTMap_DARTEL.nii');
fn_meanMTsat_orig2 = fullfile(pth_dat,'Average_MTsat_Maps', ...
    'AveragedMT_MNI_BrainMask.nii');
fn_meanMTsat_orig3 = fullfile(pth_dat,'Average_MTsat_Maps',...
    'Averaged_MT_HeadMask.nii');

% orig1 = DARTEL mean?          
% -> atlas-MTsat_space-MNI_desc-meanFull.nii/json, lower resolution
fn_meanMTsat_1 = fullfile(pth_deriv, ...
    'atlas-MTsat_space-MNI_res-low_desc-meanFull.nii');
copyfile(fn_meanMTsat_orig1,fn_meanMTsat_1)
% orig2 = mean with tight mask  
% -> atlas-MTsat_space-MNI_desc-meanICV.nii/json, high resolution
fn_meanMTsat_2 = fullfile(pth_deriv, ...
    'atlas-MTsat_space-MNI_res-high_desc-meanICV.nii');
copyfile(fn_meanMTsat_orig2,fn_meanMTsat_2)
% orig3 = mean with broader mask 
% -> atlas-MTsat_space-MNI_desc-mean.nii/json, high resolution
fn_meanMTsat_3 = fullfile(pth_deriv, ...
    'atlas-MTsat_space-MNI_res-high_desc-mean.nii');
copyfile(fn_meanMTsat_orig3,fn_meanMTsat_3)

% deal with JSONs
fn_meanMTsat_1_json = spm_file(fn_meanMTsat_1,'ext','json');
meanMTsat_1_json = struct( ...
    'Name', 'mean MTsat map', ...
    'Description', ['Mean image, over all the subjects, of the warped MTsat ' ...
        'maps obtained directly from DARTEL without any masking.'], ...
    'DerivedFrom', 'MTsat images from all subjects', ...
    'Resolution', 'Matching the Dartel template: [1.5 1.5 1.5] mm^3', ...
    'ReferencesAndLinks', 'https://doi.org/10.1016%2Fj.neurobiolaging.2014.02.008');
spm_save(fn_meanMTsat_1_json, meanMTsat_1_json, 'indent', '\t')

fn_meanMTsat_2_json = spm_file(fn_meanMTsat_2,'ext','json');
meanMTsat_2_json = struct( ...
    'Name', 'mean MTsat map ICV masked', ...
    'Description', ['Mean image, over all the subjects, of the warped MTsat ' ...
        'masked with SPM''s "intra-cranial volume" mask.'], ...
    'DerivedFrom', 'MTsat images from all subjects', ...
    'Resolution', 'Matching the resulting image: [1 1 1] mm^3', ...
    'ReferencesAndLinks', 'https://doi.org/10.1016%2Fj.neurobiolaging.2014.02.008');
spm_save(fn_meanMTsat_2_json, meanMTsat_2_json, 'indent', '\t')

fn_meanMTsat_3_json = spm_file(fn_meanMTsat_3,'ext','json');
meanMTsat_3_json = struct( ...
    'Name', 'mean MTsat map skull masked', ...
    'Description', ['Mean image, over all the subjects, of the warped MTsat ' ...
        'masked, including bits of the skull.'], ...
    'DerivedFrom', 'MTsat images from all subjects', ...
    'Resolution', 'Matching the resulting image: [1 1 1] mm^3', ...
    'ReferencesAndLinks', 'https://doi.org/10.1016%2Fj.neurobiolaging.2014.02.008');
spm_save(fn_meanMTsat_3_json, meanMTsat_3_json, 'indent', '\t')

%% Create the ICV mask
% ====================
% Use the fn_meanMTsat_3 image to define the ICV mask.

%% Collect output
% ===============
fn_out = char( ...
    fn_GMmask, fn_GMmask_json, ...
    fn_WMmask, fn_WMmask_json, ...
    fn_meanMTsat_1, fn_meanMTsat_1_json, ...
    fn_meanMTsat_2, fn_meanMTsat_2_json, ...    
    fn_meanMTsat_3, fn_meanMTsat_3_json ) ;

end